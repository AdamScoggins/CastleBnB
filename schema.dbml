table Users {
  id integer [PK, increment, not null]
  firstName varchar(20) [not null]
  lastName varchar(20) [not null]
  email varchar(30) [not null, unique]
  username varchar(18) [not null, unique]
  passwordHash char(64) [not null]
  passwordSalt varchar(10) [not null]
}


table Spots {
  id integer [PK, increment, not null]
  ownerId integer [ref: > Users.id]
  address varchar [not null]
  city varchar [not null]
  state varchar [not null]
  country varchar [not null]
  lat numeric
  lng numeric
  name varchar(50)
  description varchar [not null]
  price numeric(0,2) [not null]
  createdAt datetime [default: `now()`]
  updatedAt datetime [default: `now()`]
}

table SpotImages {
  id integer [PK, increment, not null]
  spotId integer [ref: > Spots.id]
  url varchar
  preview boolean
}

table Reviews {
  id integer [PK, increment, not null]
  userId integer [ref: > Users.id, not null]
  spotId integer [ref: > Spots.id, not null]
  review varchar [not null]
  stars integer [not null]
  createdAt datetime [default: `now()`]
  updatedAt datetime [default: `now()`]
  
  indexes {
    (userId, spotId) [unique]
  }
}

table ReviewImages {
  id integer [PK, increment, not null]
  reviewId integer [ref: > Reviews.id, not null]
  url varchar
}

table Bookings {
  id integer [PK, increment, not null]
  spotId integer [ref: > Spots.id, not null]
  userId integer [ref: > Users.id, not null]
  
  // Do we need a CHECK here?
  startDate date
  endDate date
  createdAt datetime [default: `now()`]
  updatedAt datetime [default: `now()`]
  
  indexes {
    (spotId, startDate) [unique]
    (spotId, endDate) [unique]
  }
}
